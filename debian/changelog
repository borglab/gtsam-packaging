gtsam (4.0.3-1ubuntu1~5.gbpe3d09c) focal; urgency=medium

  ** SNAPSHOT build @e3d09c8c1915fac22c9eebdd5b99c2d88087d0bb **

  * modified changelog for distro bionic

 -- Borglab Builder <borglab.launchpad@gmail.com>  Sat, 03 Apr 2021 10:02:28 -0400

gtsam (4.0.3-1ubuntu1~4.gbp21c427) bionic; urgency=medium

  ** SNAPSHOT build @21c427a22cf79e6fa3f72c91b45ac5d6aa23325b **

  * updated changelog and patch files for snapshot 4.0.3-1ubuntu1~3.gbpd2da3c
  * modified changelog for distro xenial

 -- Borglab Builder <borglab.launchpad@gmail.com>  Sat, 03 Apr 2021 10:01:15 -0400

gtsam (4.0.3-1ubuntu1~3.gbpd2da3c) xenial; urgency=medium

  ** SNAPSHOT build @d2da3c88072981f8a13a2db500cb2066664a5f65 **

  * updated changelog and patch files for snapshot 4.0.3-1ubuntu1~1.gbpcd0641
  * modified changelog for distro xenial

 -- Borglab Builder <borglab.launchpad@gmail.com>  Sat, 03 Apr 2021 10:00:59 -0400

gtsam (4.0.3-1ubuntu1~1.gbpcd0641) xenial; urgency=medium

  ** SNAPSHOT build @cd0641f97019c34fc46e2971f5ab147d966b6afb **

  [ David ]
  * Add unit test for oriented plane 3 factor jacobian
  * Fix OrientedPlane3Factor jacobian using numericalDerivative
  * Address Frank's comments and clean up changes
  * Update style and switch to errorVector()
  * Fix all unit tests. Only remaining item is the analytical Jacobian for Unit3::localCoordinates.

  [ lcarlone ]
  * adding robust cost function - version 1
  * robust noise in place - test fails due to non-isotropic covariance?
  * solving issue with robust model
  * attempting robustification in Frobenius factor
  * added nice unit test
  * improved test
  * added check and unit test
  * added control over minimum rank in ShonanAveraging example, and resolved hard-coded sigma in FrobeniusFactor
  * reverted changes to cproject and language settings
  * fixed typo
  * reverted changes to cproject

  [ John Lambert ]
  * add

  [ Varun Agrawal ]
  * check if mex compiler exists for Matlab wrapper, formatting

  [ John Lambert ]
  * add WIP PR

  [ Akshay Krishnan ]
  * Wrapping SfmCamera to be used with GeneralSFMFactor

  [ John Lambert ]
  * remove breakpoints

  [ Akshay Krishnan ]
  * Renaming SFMCamera to PinholeCameraCal3Bundler

  [ jingwuOUO ]
  * Add acc power method in Alg6
  * Completed and tested power method with unittest
  * Added PowerMinimumEigenValue method and unittest.
  * feat: Add  Best Heavy Ball alg  to set beta
  * Refactor power and accelerated method

  [ Sushmita ]
  * python wrapper for sfmdata

  [ Frank dellaert ]
  * Fix warning on clang
  * Fixed some warnings
  * Printing now transpose
  * Simplified evaluateError
  * Use keyFormatter
  * Added unit test for issue 561

  [ jingwuOUO ]
  * Reformat code.
  * Small fix

  [ John Lambert ]
  * use argparse defaults
  * make a note about how the eror drops
  * fix typo
  * clean up comments

  [ Sushmita ]
  * unittested features in SfmData
  * python wrapped SfmData and SfmTrack
  * python wrapper sfmtrack reflected in other files

  [ John Lambert ]
  * renamed myData to scene_data, and explained BAL parameterization
  * update list of C++ examples that have been ported to Python

  [ Sushmita ]
  * changed Measurements to measurements
  * wrapped sfmtrack
  * removed measurements from sfmdata

  [ jingwuOUO ]
  * Revise according to Frank and David's comments
  * Correct unittest input error
  * Added more detailed documentation
  * Fixed not solve errors and detailed documentation

  [ Jose Luis Blanco-Claraco ]
  * Add alternativeName()

  [ Jose Luis Blanco Claraco ]
  * replaced lambda with class plus functor
  * less verbose name path for SymbolGenerator

  [ Sushmita ]
  * changed setP method name removed commented code
  * remved commented code

  [ jingwuOUO ]
  * Revised as David's second review
  * Refined unittest

  [ Sushmita ]
  * added new constructor and changed to emplace

  [ Jose Luis Blanco-Claraco ]
  * Automatic detection of correct suggest-override flag

  [ Tim McGrath ]
  * adding additional Unit3 support in the wrapper: PriorFactorUnit3, Values::insert/update/at(Unit3)

  [ jingwuOUO ]
  * Delete forcing compare eigenvector in unittest
  * Revised documentation

  [ Sushmita ]
  * sfmtrack constructor changed to accept point

  [ Fan Jiang ]
  * Attempt to fix spooky boost in Homebrew
  * Use my tap
  * Use my tap
  * Use explict tap name
  * Last resort: use the explict 1.73 formula
  * Use my tap

  [ jingwuOUO ]
  * Fixed forcing comparing eigenvector.

  [ Varun Agrawal ]
  * Added flag for absolute error
  * add test
  * cleaner assertion
  * Consistent interface for pixel center (#579)
  * minor typo fixes
  * Fix python discovery for MATLAB wrapper

  [ Jose Luis Blanco-Claraco ]
  * Avoid redundant calls to error()
  * Add iteration hook in non-linear optimizers

  [ Varun Agrawal ]
  * Use new env files for github actions
  * Roustify BinaryMeasurements in a functional way, plus formatting
  * Remove goto, update docs, formatting
  * delete old, unused file
  * ubuntu with gcc-9 in CI
  * fix path setting for Windows

  [ Martin Vonheim Larsen ]
  * Docs: Use https for mathjax

  [ Varun Agrawal ]
  * Force EXPMAP option for both if either POSE3 or ROT3 is set
  * uncomment tests
  * Improved CayleyChart Local
  * Similarity3 test only for Rot3 Expmap
  * comment out Windows build which is timing out
  * Update Boost since 1.69.0 has been deprecated in CI images
  * Comment out Windows 2016 since it times out
  * Revert "Improved CayleyChart Local"
  * Use older and faster Cayley transform but add det check and docs
  * Print message when either Pose3 or Rot3 expmap is ON
  * CI path for Cayley transform
  * small doc fix
  * Add new assertions and update tests
  * pass in params to optimizer
  * upload build directory after workflow completes

  [ jingwuOUO ]
  * Fixed doxygen

  [ Jose Luis Blanco Claraco ]
  * Add docs, fix ctor placement
  * further extended docs

  [ Varun Agrawal ]
  * use KeyVector to allow proper wrapping with TBB
  * update MFAS tests
  * fix indentation and add upload for Windows
  * correct form for workspace env variable
  * differentiate between Release and Debug builds
  * Better fkag naming, and more docs
  * placed MEX check to new cmake file
  * restructuring
  * encapsulated and updated all the CMake related to Matlab
  * better flag name and docs
  * only upload release builds
  * enforce constant term in quadratic to be 0
  * Make Values::at return as const
  * correct conditional syntax
  * FIx indentation for Values-inl.h
  * syntax update

  [ jingwuOUO ]
  * Added test for subgraph preconditioner in shonan
  * Refined error message in subgraphbuilder

  [ Frank dellaert ]
  * Initial design

  [ lcarlone ]
  * starting to create test and code for gncParams

  [ Sushmita ]
  * vector of cameras and triangulation function wrapped

  [ lcarlone ]
  * added equals in NonlinearOptimizerParams
  * params parsed correctly
  * added gnc loop
  * now we have very cool tests!
  * 2 tests to go
  * simplified small test to make it more understandable
  * 1 test to go
  * stuck on conversion of noise model
  * finally I have a way to properly change the noise model!
  * working on make graph
  * new constructor test which gets rid of robust loss now passes!
  * yay! only the final monster to go!

  [ Varun Agrawal ]
  * Assign pointer to prevent errors
  * fixes to plot code
  * suppress warnings from clang as well

  [ lcarlone ]
  * added verbosity
  * ladies and gents... GNC!
  * added functionality to fix weights
  * correct formatting
  * done - PGO works like a charm!

  [ Sushmita ]
  * docs fixed and error threshold reduced
  * moved landmark variable to setup
  * push back arguments changed to const reference
  * removed commented code

  [ akrishnan86 ]
  * new test doesnt pass
  * translation recovery unit tests pass

  [ Varun Agrawal ]
  * Deprecate SimpleCamera properly
  * deprecate SimpleCamera tests

  [ jingwuOUO ]
  * Fixed typo

  [ Varun Agrawal ]
  * Jacobians for Camera models
  * update Python test
  * Revert "FIx indentation for Values-inl.h"
  * uncomment calibration applications
  * Removed unnecessary copy constructor and robust noise model is caller's responsibility
  * throw runtime errors and explicitly form robust noise model
  * makeNoiseModelRobust assumes responsibility for robustifying noise models
  * use goto flow
  * formatting

  [ jingwuOUO ]
  * Added more description to the toyExample.g2o

  [ Varun Agrawal ]
  * fix tests
  * Don't throw error for Kappa and test parameter print

  [ jingwuOUO ]
  * Added dense matrix test case in power/acc

  [ Varun Agrawal ]
  * added Imu parameter units to doc
  * formatting
  * Common function to compute Jacobians of calibrate method

  [ akrishnan86 ]
  * changing test names and adding documentation

  [ Varun Agrawal ]
  * Revert "added Imu parameter units to doc"
  * Revert "formatting"

  [ akrishnan86 ]
  * documenting member variables

  [ Varun Agrawal ]
  * Added units for imu noise and bias sigmas
  * common header file for all calibration models
  * Base class for all calibration models
  * Refactor Cal3_S2 and Cal3_S2Stereo classes
  * Refactor all Cal3D based models
  * Refactor Bundler and Fisheye models
  * Minor updates
  * Remove deprecated calibration method from wrapper
  * replace typedef with using

  [ Sushmita ]
  * templated functions where possible
  * removed push_back method from cameraset wrapper
  * added utility functions and code cleanup

  [ Varun Agrawal ]
  * modernized default constructors
  * Cal3 code improvements
  * matrix_inverse() -> inverse()
  * remove using-namespace and fix print test
  * Added tests for printing, plus small formatting
  * stream printing for all calibration models
  * Improved constructor for loading parameters from file
  * Override dim(), cleanup, and add unicode
  * Added tests for checking calibration model dimensions
  * Consistent and better formatting
  * additional formatting

  [ Jose Luis Blanco Claraco ]
  * SymbolGenerator: add chr() and made constexpr-capable

  [ Varun Agrawal ]
  * mark getters as const
  * Helper method to robustify measurements
  * calibrate and uncalibrate for Cal3_S2Stereo model
  * throw error if robust model used but not specified in parameters

  [ Sushmita ]
  * added cmake and preamble
  * moved measurement generation to separate function
  * code formatted

  [ Varun Agrawal ]
  * disambiguate overloaded base class

  [ Sushmita ]
  * removed typedef and formatted code

  [ Varun Agrawal ]
  * function to save graph as graphviz file via wrapper

  [ Sushmita ]
  * moved camera_set to generate_measurements

  [ lcarlone ]
  * moved class to .h
  * added comments
  * fixed typo
  * added more explanation on throw

  [ Varun Agrawal ]
  * added flag to enable optimality certification, some formatting
  * correct flag checking
  * Revert "code formatted"
  * format python triangulation tests
  * more formatting
  * remove unused imports

  [ jingnanshi ]
  * fix comment

  [ Varun Agrawal ]
  * formatting and small fixes

  [ jingnanshi ]
  * TLS wip
  * tls done except unit tests
  * minor fix
  * fix scoping
  * mu initialization test & minor formatting fixes
  * mu update test
  * correctly check relative difference between mu valus at consecutive iterations
  * test fix
  * more unit tests

  [ Varun Agrawal ]
  * better documentation

  [ Russell Buchanan ]
  * Adds unit test for imu preintegration of a single step

  [ lcarlone ]
  * fixed small typos

  [ Varun Agrawal ]
  * explicitly initialize Point3
  * formatting

  [ jingwuOUO ]
  * Added the example graph in powerMethodExample.h
  * Refined reference documentation
  * Make purturb static

  [ Varun Agrawal ]
  * refactored code for ImuMeasurements
  * refactored code for testing ImuPreintegration with impact
  * add simulation data
  * save time in CSV, formatting

  [ lcarlone ]
  * templating on params is still problematic
  * finally fixed the typedef
  * fixed templating, added a strict unit test on inlier threshold
  * made function name less ambiguous, added more comments on inlierThreshold

  [ jingnanshi ]
  * Fix TLS convergence check
  * update function name
  * fix test

  [ lcarlone ]
  * - fixed stopping conditions - handled degenerate case in mu initialization - set TLS as default - added more unit tests

  [ jingnanshi ]
  * minor fixes

  [ Varun Agrawal ]
  * wrap Symbol class and methods
  * minor formatting of cmake file

  [ Ayush Baid ]
  * Wrapping Cal3Bundler's prior and GeneralSFMFactor2

  [ lcarlone ]
  * moved GncParams to separate file, addressing comments by Frank, 1/n
  * renamed enum
  * addressed all except 2 comments by Frank. waiting for inputs on the 2 outstanding issues

  [ Ayush Baid ]
  * Adding Cal3DS2 prior factor and using template instead of typedefs

  [ lcarlone ]
  * moved gncLossType outside params

  [ cttdev ]
  * Adding BearingFactor3D to the wrapper definition.

  [ lcarlone ]
  * addressed final comments by Frank

  [ Varun Agrawal ]
  * Pose3 interpolateRt method (#647)

  [ Ayush Baid ]
  * adding serialization and other functions to enable testing
  * adding track serialization and testable trait
  * improving formatting
  * fixing variable names and comments
  * adding serialization functions to wrapper

  [ Varun Agrawal ]
  * remove build upload since it can't be used downstream

  [ Ayush Baid ]
  * fixing xml serialization issues
  * reverting SfmTrack to struct
  * printing out the 3d point
  * adding equals function to wrapper
  * adding inline comment for round trip
  * Adding serialization support to be used for GT-SFM (#650)

  [ Varun Agrawal ]
  * documentation for compiling on windows
  * improvements to windows doc
  * Squashed 'wrap/' changes from dfa624e77..09f8bbf71
  * updates to Cmake to use the new wrap package
  * updated python setup files so that example data is loaded correctly
  * more precise python version control in CI
  * Revert "more precise python version control in CI"

  [ Frank Dellaert ]
  * add virtual constructor
  * Removed reference for iterating over values. Also used auto where I could, when changing.

  [ Varun Agrawal ]
  * fix metis based warnings in CMake and compiling
  * add std namespacing
  * fix warnings for vectors and matrices
  * verbose printing of exceptions
  * remove verbose flag and print exception to std::cerr
  * cleanly initialize matrices in test
  * remove exception print, add TODO

  [ Ayush Baid ]
  * adding default color values to fix equality check

  [ John Lambert ]
  * make r,g,b part of constructor w/ default values
  * add getter for rgb
  * make getter const

  [ Varun Agrawal ]
  * use older form of CMake install
  * add docs for cmake update
  * follow correct doxygen format
  * Squashed 'wrap/' changes from 09f8bbf71..186ed2c79
  * Squashed 'wrap/' changes from 186ed2c79..85d34351c

  [ David ]
  * Add getters to line3

  [ John Lambert ]
  * add robust shonan updates to python wrapper

  [ RamadanAhmed ]
  * Fix GTSAM_EXPORT for some classes and function

  [ Varun Agrawal ]
  * added FunctorizedFactor2

  [ Toni ]
  * Split .h/.cpp, use const& (WIP)

  [ Jose-Luis Blanco Claraco ]
  * CMake scripts compatible with gtsam as git submodule

  [ Ayush Baid ]
  * changing robust noise model to Gaussian

  [ Toni ]
  * Move example to gtsam_unstable
  * Fix formatting
  * Remove gtsam_unstable lib from examples
  * Fix formatting

  [ Gerry Chen ]
  * Mandy+Fan's original code for converting sparse matrices to Eigen format
  * merge Mandy + Fan's sparseJacobian unit test additions
  * organize/isolate sparseEigen functionality
  * fix off-by-one bug
  * cleanup

  [ jingwuOUO ]
  * Set estimateBeta() as optional

  [ Russell Buchanan ]
  * clean up

  [ Gerry Chen ]
  * rename matrix type from `SpMat` to `SparseEigen`
  * roll back some cosmetic changes to minimize the diff
  * SparseEigen docstring
  * typo: `expected` changed to `expectedMatlab`

  [ David Wisth ]
  * Add a simplifed version of the minimal failing example

  [ Gerry Chen ]
  * timing sparse eigen
  * minor efficiency modifications

  [ Varun Agrawal ]
  * use streams instead of printf
  * use of passed in stream for print capture
  * stream printing for Pose2
  * add BearingRange measured to wrapper
  * add override and formatting
  * remove cout statements from testImuPreintegration tests

  [ David Wisth ]
  * Add hessian calculation

  [ Gerry Chen ]
  * add generic optional parameters to sparseJacobian Also, the unit test changed due to a 0 entry that was previously wrongly included in the b-column of the sparse representation.
  * more generic sparseJacobianInPlace function
  * eliminate copy/pasta from SparseEigen with generic version of sparseJacobian
  * populate sparse matrix with `insert` rather than `setFromTriplets` About 5% speed improvement.

  [ Varun Agrawal ]
  * upgrade minimum required Boost version to 1.67.
  * Revert "upgrade minimum required Boost version to 1.67."
  * add known issues section with info about march=native

  [ Gerry Chen ]
  * move SparseMatrixBoostTriplets typedef to gfg
  * remove templating while maintaining efficiency Templating still used in cpp file for generic-ness, but not exposed anymore
  * revert Matrix.h
  * formatting

  [ Frank Dellaert ]
  * use transform rather than deprecated static function
  * Got rid of extra keys
  * Got rid of static versions of methods
  * Cleaned up derivative code
  * Cleanup

  [ Toni ]
  * Fix can be marked override warning

  [ Varun Agrawal ]
  * make non-editable CMake variables as INTERNAL
  * set TBB default to Release unless TBB_USE_DEBUG_BUILD is set

  [ lcarlone ]
  * changed barcsq to be a vector, such that the user can provide a bound for each factor
  * trying to include chi2
  * working unit tests: added chi2
  * done with new default noise thresholds!

  [ Varun Agrawal ]
  * fix bug in Pose2 print
  * use standard function to check for empty string

  [ Gerry Chen ]
  * remove unnecessary function overloads and typedefs
  * remove InPlace jacobian from .h file
  * fix comment and remove whitespace diff
  * disambiguate double template >>
  * replace sparseJacobian with "fast" version
  * auto and reserve fewer

  [ Peter Mullen ]
  * type in test hidden by duplicate test values

  [ Toni ]
  * Fix override warnings: modernize-use-override

  [ Frank Dellaert ]
  * cleanup

  [ lcarlone ]
  * improved comments
  * removed commented line

  [ jingnanshi ]
  * use std namespace qualifier

  [ Frank Dellaert ]
  * Comments

  [ Toni ]
  * Fix issue #689
  * Remove unnecessary include eigen3

  [ Jose Luis Blanco Claraco ]
  * Avoid target collision if gtsam used as submodule

  [ Mostafa ]
  * Update LieGroups.lyx
  * Generate LieGroups.pdf

  [ David Wisth ]
  * Add new oriented plane 3 factors with local linearisation point
  * Update print method of OrientedPlane3Factor
  * remove deprecated Unit3::error() which is replaced by Unit3::errorVector()
  * Update documentation on new factor

  [ Fan Jiang ]
  * Fix GTSAM MATLAB
  * Squashed 'wrap/' changes from 85d34351c..b28b3570d
  * Use latest Boost

  [ David Wisth ]
  * Revert "remove deprecated Unit3::error() which is replaced by Unit3::errorVector()"
  * remove the error() function from OrientedPlane3 (it had incorrect derivatives)
  * Tidy up comments and use cpplint
  * small tidy and fix unit tests

  [ John Lambert ]
  * Start moving Sim(3) functionality into Python wrapper

  [ David Wisth ]
  * Add inline comments on commented-out unit tests

  [ Asa Hammond ]
  * Initial implimentation of a Constant Velocity Constraint between NavStates
  * add gtsam namespace
  * bind a lambda instead of a static function

  [ John Lambert ]
  * add sim3 Point3 align to wrapper
  * Fix typo in using -> typedef conversion
  * move sim3 to stable version
  * move unit test out of gtsam unstable
  * move typedef to header file
  * add Align() for pose3pairs

  [ Asa Hammond ]
  * Add docstrings, use update() to build predicted state and build the error calc
  * remove AAA style for Dellaert style on simpler types
  * rename some vars for consistency
  * static const for placeholder vars
  * fixup noisemodel so its correct dimension
  * cleanup some cruft, add license text
  * corrected license header

  [ John Lambert ]
  * add standard interface for Sim3 in wrapper

  [ Asa Hammond ]
  * test cleanup

  [ John Lambert ]
  * add interface for transformFrom
  * PointPairs to Point3Pairs, and move to Point3.h
  * move PointPairs to Point3.h
  * update the docstring
  * Rename PointPairs to Point3Pairs everywhere per popular demand
  * add a unit test for line case
  * add another unit test, but this one fails
  * move Point3Pairs to Point3.h part of gtsam.i
  * fix notation
  * fix bugs in Karcher mean
  * switch typedef to using per popular request
  * update author list

  [ Akshay Krishnan ]
  * unit test + fix segfault

  [ akrishnan86 ]
  * formatting changes

  [ John Lambert ]
  * Use brew's boost, instead of Fan's version
  * fix notations
  * clean up Sim(3) notations
  * update test notation to have just 1 world frame, and fix typo in abPointPairs
  * dont conflate notation on aTb

  [ Ayush Baid ]
  * Squashed 'wrap/' changes from b28b3570d..d37b8a972
  * Squashed 'wrap/' changes from d37b8a972..10e1efd6f
  * enabling markers and testing pickle roundtrip for few classes

  [ Varun Agrawal ]
  * offload matlab wrapping to the wrap project
  * Make matlab wrapping rely completely on the wrap project

  [ John Lambert ]
  * improve docstring
  * improve docstring

  [ Varun Agrawal ]
  * update Matlab CMakeLists.txt to use the wrapper
  * delete example project since it is now its own git template
  * Squashed 'wrap/' changes from b28b3570d..b0eb968f2

  [ John Lambert ]
  * add const on Rot3
  * improve docstring
  * reformat with black
  * use different brace indent format

  [ Varun Agrawal ]
  * Fix Matlab tests and add saveGraph method to GaussianBayesNet

  [ Asa Hammond ]
  * Avoid derivative calcs if they aren't asked for
  * Move to fixed size matrix for derivative calculations

  [ John Lambert ]
  * temporarily turn off Python + tbb in CI because of OOM

  [ Frank Dellaert ]
  * fixed inhertance
  * Added explicit header as suggested in issue #634

  [ Varun Agrawal ]
  * clean up the CMake
  * Squashed 'wrap/' changes from b0eb968f2..d19cda546
  * templated return types are now supported
  * Move wrapper documentation to the wrap project
  * fix holder_type typo
  * make ignore list consistent across Python and Matlab
  * Squashed 'wrap/' changes from d19cda546..91f3835a8
  * Squashed 'wrap/' changes from 91f3835a8..aae9b4605
  * undo ignore updates, all tests now pass

  [ Jose Luis Blanco Claraco ]
  * fix missing verbosityLMTranslator case

  [ Varun Agrawal ]
  * fix the Similarity3 export declarations and wrapper
  * Fix CI with separate boost install
  * temporarily added required check
  * explicitly add python version

  [ Milo Knowles ]
  * Three examples of failing PartialPriorFactor<Pose3> Jacobians
  * Add successful unit test for identity pose
  * Correct Jacobian in PartialPriorFactor, modify derived factors for compatibility
  * Change mask to indices and update factor docstring
  * Prefer localCoordinates over logmap

  [ Varun Agrawal ]
  * fix numpy deprecation warnings
  * more specific version of python to test against
  * Squashed 'wrap/' changes from aae9b4605..3eff76f60
  * Squashed 'wrap/' changes from 3eff76f60..548e61b1f
  * added CMake variable to set the matlab.h include
  * Squashed 'wrap/' changes from 548e61b1f..29628426d
  * switch back to simple python3
  * fix number of arguments to matlab_wrap for unstable
  * Squashed 'wrap/' changes from 29628426d..9a467794e
  * Squashed 'wrap/' changes from 9a467794e..96ccdfd0b

  [ Milo Knowles ]
  * Fix x/y mismatch in unit tests
  * Add constructor tests and extend tests to Pose2
  * Switch to cleaner T::Logmap
  * Fix incorrect Vector dimension that was causing CI failures
  * Add LocalCoordinates() to ProductLieGroup and remove unnecessary <Eigen/Core> include to reduce compile memory
  * Fix Rot3::LocalCoordinates runtime error when using Cayley map

  [ Varun Agrawal ]
  * Squashed 'wrap/' changes from 96ccdfd0b..5ddaff8ba
  * operator overloading for compose
  * add operator overloading and fix some TODOs in the wrapper

  [ Borglab Builder ]
  * updated changelog and patch files for snapshot 4.0.3-1

 -- Borglab Builder <borglab.launchpad@gmail.com>  Sat, 03 Apr 2021 09:57:28 -0400

gtsam (4.0.3-1) unstable; urgency=medium

  * First Debian release.

 -- Jose Luis Blanco Claraco <joseluisblancoc@gmail.com>  Sun, 4 Oct 2020 08:50:00 +0200
